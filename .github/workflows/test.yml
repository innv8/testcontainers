name: Test with Testcontainers and SonarQube

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/catthehacker/ubuntu:act-latest
      options: --platform linux/amd64

    services:
      docker:
        image: docker:24.0.7-dind
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_HOST: unix:///var/run/docker.sock

    env:
      DOCKER_HOST: unix:///var/run/docker.sock

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Verify Docker
        run: docker ps 

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23 

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod 
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Go Dependencies
        run: go mod tidy && go mod download

      - name: Cache Docker Layers for the Test Containers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Load Cached Docker Layers
        run: |
          mkdir -p /tmp/.buildx-cache
          docker buildx create --use --driver docker-container --buildkitd-flags "--debug"
          docker buildx inspect --bootstrap

      - name: Run Tests with Coverage
        run: go test -coverprofile=coverage.out ./logic -v

      - name: Convert Coverage for SonarQube
        run: go tool cover -func=coverage.out

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
